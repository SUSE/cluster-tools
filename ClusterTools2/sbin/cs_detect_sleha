#!/bin/bash
#
# cs_detect_sleha
#
# (c) 2016 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU General Public License v2. No warranty.
#
# Version: SLES11 2016-08-02
#

EXE="$0"
ERR="/dev/null"

CFG="/etc/ClusterTools2/cs_detect_sleha"
test -s $CFG && source $CFG
DELCIBCFG="/etc/ClusterTools2/cs_delcib"
test -s $DELCIBCFG && source $DELCIBCFG

test -z "${SLEHA_BASE_FIL}" &&\
	SLEHA_BASE_FIL="
/etc/corosync/corosync.conf
/var/lib/pacemaker/cib/cib.xml
"
test -z "${SLEHA_MISC_FIL}" &&\
	SLEHA_MISC_FIL="
/etc/products.d/sle-hae.prod
/etc/corosync/authkey
/var/lib/corosync/ringid_*
/var/lib/pacemaker/pengine/*
/etc/csync2/csync2.cfg
/etc/drbd.conf
/var/cache/zypp/raw/*/suse/setup/descr/ha_sles*.pat.gz
"
test -z "${SLEHA_KERN_FIL}" &&\
	SLEHA_KERN_FIL="
/etc/drbd.conf
/etc/ocfs2/cluster.conf
/etc/sysconfig/o2cb
/etc/rear/local.conf
"
test -z "${SLEHA_BASE_RPM}" &&\
	SLEHA_BASE_RPM="
openais
corosync
crmsh
pacemaker
resource-agents
cluster-glue
libglue2
libcorosync4
libpacemaker3
libopenais3
"
test -z "${SLEHA_MISC_RPM}" &&\
	SLEHA_MISC_RPM="
sle-hae-release
release-notes-hae
ocfs2-tools
csync2
pacemaker-mgmt
pacemaker-mgmt-client
hawk
drbd
yast2-cluster
yast2-drbd
yast2-iplb
ldirectord
lvm2-clvm
cmirrord
conntrack-tools
pssh
python-pssh
python-dateutil
sleha-bootstrap
ctdb
"
test -z "${SLEHA_KERN_RPM}" &&\
	SLEHA_KERN_RPM="
ocfs2-tools-o2cb
ocfs2-kmp-default
ocfs2-kmp-xen
drbd-utils
drbd-kmp-default
drbd-kmp-xen
rear
rear116
"
test -z "${SLEHA_REPO_RPM}" &&\
        SLEHA_REPO_RPM="
cluster-glue-1.0.12-0.25.14
cluster-network-kmp-default-1.4_3.0.101_63-2.30.38
cluster-network-kmp-trace-1.4_3.0.101_63-2.30.38
cluster-network-kmp-xen-1.4_3.0.101_63-2.30.38
cmirrord-2.02.98-0.11.1
conntrack-tools-1.0.0-0.7.42
corosync-1.4.7-0.21.3
crmsh-2.1.2+git49.g2e3fa0e-1.32
csync2-1.34-0.11.47
ctdb-1.0.114.6-0.11.1
drbd-8.4.4-0.25.78
drbd-bash-completion-8.4.4-0.25.78
drbd-heartbeat-8.4.4-0.25.78
drbd-kmp-default-8.4.4_3.0.101_63-0.25.40
drbd-kmp-trace-8.4.4_3.0.101_63-0.25.40
drbd-kmp-xen-8.4.4_3.0.101_63-0.25.40
drbd-pacemaker-8.4.4-0.25.78
drbd-udev-8.4.4-0.25.78
drbd-utils-8.4.4-0.25.78
drbd-xen-8.4.4-0.25.78
fence-agents-4.0.12-1.45
gfs2-kmp-default-2_3.0.101_63-0.22.2
gfs2-kmp-trace-2_3.0.101_63-0.22.2
gfs2-kmp-xen-2_3.0.101_63-0.22.2
graphviz-python-2.20.2-6.33
hawk-0.7.0+git.1430140184.8e872c5-3.18
hawk-templates-0.7.0+git.1430140184.8e872c5-3.18
ipvsadm-1.26-5.11.2
ldirectord-3.9.5-40.32
libcorosync4-1.4.7-0.21.3
libcorosync-devel-1.4.7-0.21.3
libdlm-3.00.01-0.31.87
libdlm3-3.00.01-0.31.87
libdlm-devel-3.00.01-0.31.87
libglue2-1.0.12-0.25.14
libglue-devel-1.0.12-0.25.14
libgnutls-extra26-2.4.1-24.39.55.1
libnetfilter_conntrack3-0.9.1-0.5.53
libnetfilter_conntrack-devel-0.9.1-0.5.53
libnfnetlink-devel-1.0.0+git1-9.5.56
libopenais3-1.1.4-5.24.5
libopenais-devel-1.1.4-5.24.5
libpacemaker3-1.1.12-11.12
libpacemaker-devel-1.1.12-11.12
libqb0-0.17.1-3.8
libqb-devel-0.17.1-3.8
librsync-0.9.7-103.8
lighttpd-1.4.20-2.54.1
lvm2-clvm-2.02.98-0.33.1
nagios-plugins-metadata-3.9.5-40.32
ocfs2console-1.8.2-0.19.1
ocfs2-kmp-default-1.6_3.0.101_63-0.23.40
ocfs2-kmp-trace-1.6_3.0.101_63-0.23.40
ocfs2-kmp-xen-1.6_3.0.101_63-0.23.40
ocfs2-tools-1.8.2-0.19.1
ocfs2-tools-devel-1.8.2-0.19.1
ocfs2-tools-o2cb-1.8.2-0.19.1
openais-1.1.4-5.24.5
pacemaker-1.1.12-11.12
pacemaker-cli-1.1.12-11.12
pacemaker-mgmt-2.1.2-20.16
pacemaker-mgmt-client-2.1.2-20.16
pacemaker-mgmt-devel-2.1.2-20.16
pacemaker-remote-1.1.12-11.12
pssh-2.3.1-12.33
python-dateutil-1.4.1-1.20
python-pexpect-3.1-0.7.1
python-pssh-2.3.1-12.33
python-suds-0.4-0.20.1
rear-1.10.0-1.12.31
rear116-1.16-0.7.1
rear-SUSE-0.1.beta12-0.5.1
release-notes-hae-11.4.6-0.10.14
resource-agents-3.9.5-40.32
rubygem-bundler-1.7.0-0.7.1
rubygems-1.8.15-0.14.1
sbd-1.2.1-0.10.80
scsires-0.7-2.23.21
sleha-bootstrap-0.3-0.33.18
sle-hae-release-11.4-1.54
sle-hae-release-cd-11.4-1.54
sle-ha-guide_en-pdf-11.4-0.21.7
sleha-guide_ja-11.1-0.2.1
sleha-guide_ja-pdf-11.1-0.2.1
sleha-guide_zh_CN-11.1-0.2.1
sleha-guide_zh_CN-pdf-11.1-0.2.1
sleha-guide_zh_TW-11.1-0.2.1
sleha-guide_zh_TW-pdf-11.1-0.2.1
sle-ha-manuals_en-11.4-0.21.7
sle-ha-nfs-quick_en-pdf-11.4-0.21.7
sqlite2-2.8.17-134.12
yast2-cluster-2.15.0-8.49.78
yast2-drbd-2.13.1-217.43.31
yast2-iplb-2.15.0-0.18.90
yast2-multipath-2.17.1-4.47
yast2-rear-2.17.0-0.7.68
"
# from cs_delcib
test -z "${FIL}" &&\
        FIL="
/var/lib/corosync/*
/var/lib/heartbeat/cores/*/*
/var/lib/heartbeat/crm/*
/var/lib/pengine/*
/var/lib/pacemaker/cib/*
/var/lib/pacemaker/pengine/*
"
test -z "${BAK}" &&\
        BAK="/var/adm/backup/cib.xml-$(date +%Y%m%d-%H%M%S)"
#

CFGVAR="
SLEHA_BASE_FIL
SLEHA_MISC_FIL
SLEHA_KERN_FIL
SLEHA_BASE_RPM
SLEHA_MISC_RPM
SLEHA_KERN_RPM
SLEHA_REPO_RPM
"

# TODO show RPM list from pattern file

function help(){
	echo "usage:	$(basename $0) [OPTION]"
	echo
	echo " --help		show help"
	echo " --version	show version"
	echo " --writecfg	show some internal variables"
	echo
	echo " --detect	shown number of traces"
	echo " --installed	show installed base RPMs"
	echo " --available	show available base RPMs"
	echo " --standalone	show standalone services"
	echo " --files	show common files"
	echo " --pedantic	show even minimal traces of SLE-HA"
	echo " --removeall	remove RPMs, files, and repos of SLE-HA"
	echo " --uninstall	uninstall RPMs of SLE-HA"
	echo
}


function writecfg(){
	#echo "INFO: ### $FUNCNAME $1 start ###" >/dev/stderr
	echo -e "# $CFG \n# For SLES11.\n#"
	for c in $CFGVAR; do
		echo "${c}=\""
		echo ${!c} | tr " " "\n"
		echo "\""
		echo "#"
	done
	#echo "INFO: ### $FUNCNAME $1 end ###" >/dev/stderr
}


function remove_files(){
	echo "INFO: ### $FUNCNAME $1 start ###"
	for f in $SLEHA_BASE_FIL $SLEHA_MISC_FIL $SLEHA_KERN_FIL; do
		rm -rf $f
	done
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function remove_rpms(){
	echo "INFO: ### $FUNCNAME $1 start ###"
	for f in $SLEHA_REPO_RPM; do
		timeout 5 zypper rm --no-force-resolution --no-clean-deps --quiet --yes $f
	done
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function remove_repos(){
	echo "INFO: ### $FUNCNAME $1 start ###"
	# TODO timeout 5 zypper rs (removeservice)
	# TODO timeout 5 zypper rr (removerepo)
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function remove_cib(){
	echo "INFO: ### $FUNCNAME $1 start ###"
	#test -x /usr/sbin/cs_delcib && /usr/sbin/cs_delcib --offline
	for f in $FIL $BAK; do
		rm -rf $f
	done
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function detect_files(){
	# TODO read variable name from call, avoid case
	echo "INFO: ### $FUNCNAME $1 start ###"
	case $1 in
		base)
		for f in $SLEHA_BASE_FIL; do
			ls -l $f 2>$ERR
		done
		;;
		misc)
		for f in $SLEHA_MISC_FIL; do
			ls -l $f 2>$ERR
		done
		;;
		kern)
		for f in $SLEHA_KERN_FIL; do
			ls -l $f 2>$ERR
		done
		;;
	esac
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function detect_rpms(){
	# TODO read variable name from call, avoid case
	echo "INFO: $FUNCNAME $1 start ###"
	timeout 5 zypper ref
	case $1 in
		base)
		for r in $SLEHA_BASE_RPM; do
			timeout 5 zypper se -s $r 2>$ERR
		done
		;;
		misc)
		for r in $SLEHA_MISC_RPM; do
			timeout 5 zypper se -s $r 2>$ERR
		done
		;;
		kern)
		for r in $SLEHA_KERN_RPM; do
			timeout 5 zypper se -s $r 2>$ERR
		done
		;;
	esac
	echo "INFO: ### $FUNCNAME $1 end ###"
}


function detect_repos(){
	echo "INFO: ### $FUNCNAME $1 start ###"
	# TODO detect repos
#	case $1 in
	#timeout 5 zypper ... --with-repos --sort-by-priority --details --uri
#	esac
	echo "INFO: ### $FUNCNAME $1 start ###"
}


# main()
case $1 in
	-v|--version)
		echo -n "$(basename $EXE) "
		head -11 $EXE | grep "^# Version: "
		exit
	;;
	-h|--help)
		help
		exit
	;;
	-w|--writecfg)
		writecfg
		exit
	;;
	-a|--available)
		detect_rpms base | grep -v "in.*\.\.\.$"
		exit
	;;
	-i|--installed)
		echo "INFO: ### detect_rpms base start ###"
		echo "S | Name             | Type       | Version      | Arch   | Repository "
		echo "-----------------------------------------------------------------------"
		detect_rpms base | grep -e "^i" -e "INFO:.*end"
		exit
	;;
	-f|--files)
		detect_files base
		detect_files misc
		detect_files kern 
		exit
	;;
	-s|--standalone)
		detect_files kern
		echo "INFO: ### detect_rpms kern start ###"
		echo "S | Name             | Type       | Version      | Arch   | Repository "
		echo "-----------------------------------------------------------------------"
		detect_rpms kern | grep -v "^INFO:.*start.###" | grep -v "in.*\.\.\.$" | grep -v "^S.\|.Name" |\
	 		grep -v "^Repository" | grep -v "^All.repositories" | grep -v "^No.packages.found" |\
			grep -v -- "^--+" | tr -s "\n"
		exit
		# TODO better grep, maybe positive filter function
	;;
	-p|--pedantic|--paranoid|--penetrant)
		detect_files base
		detect_files misc
		detect_files kern
		( detect_rpms base
		detect_rpms misc
		detect_rpms kern ) | grep -v "in.*\.\.\.$"
		exit
	;;
	-u|--uninstall)
		YESNO=no
		read -p "Uninstall RPMs of SLE-HA? [yes/no]: " YESNO
		[[ $YESNO == "yes" ]] || exit
		echo remove_rpms
		exit
	;;
	-r|--removeall)
		YESNO=no
		read -p "Remove RPMs, files, and repos of SLE-HA? [yes/no]: " YESNO
		[[ $YESNO == "yes" ]] || exit
		echo remove_files
		echo remove_rpms
		echo remove_cib
		# TODO remove_repos
		exit
	;;
	-d|--detect|*)
		RC=0
		RC=$(
		( detect_files base
                  detect_files misc
                  detect_files kern
                  ( detect_rpms base
                    detect_rpms misc
                    detect_rpms kern ) | grep -v "in.*\.\.\.$" )|\
		grep -v "^INFO:.*###" | grep -v "^S.\|.Name" | grep -v -- "^--+" |\
	 	grep -v "^Repository" | grep -v "^All.repositories" | grep -v "^No.packages.found" |\
		tr -s "\n" 2>$ERR | wc -l )
		echo "${EXE}: Found $RC hints on SLE-HA" >/dev/stderr
		exit $RC
		# TODO better grep, maybe positive filter function
	;;
esac
#
