#!/bin/bash
#
# cs_check_lsbinit
#
# (c) 2013 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU Public License. No warranty.
#
# Version : 2013-08-07
#
#set -x

EXE=$0
ERR=/dev/null
# TODO use config file for patterns and number


function check() {
  OK=0; KO=0
  for f in /etc/init.d/* ; do
	RC=0
	if [ -f $f -a -x $f ]; then
		m=$( grep -c -e '^### BEGIN INIT INFO' \
		-e '^#[[:blank:]]\{1\}Provides:[[:blank:]]\+' \
		-e '^#[[:blank:]]\{1\}Default-Start:[[:blank:]]\+' \
		-e '^#[[:blank:]]\{1\}Default-Stop:[[:blank:]]\+' \
		-e '^### END INIT INFO' \
		-e '[[:blank:]]\+/etc/rc.status' \
		-e '[[:blank:]]\?start\\*\?)' \
		-e '[[:blank:]]\?stop\\*\?)' \
		-e '[[:blank:]]\?status\\*\?)' \
		$f 2>>$ERR )
	# TODO check LSB if only one blank is allowed after # and after :
	# TODO better regex for start
	# 	|start start| " "start ^start start"*"
	# TODO see smt, rpmconfigcheck
	# TODO nfs has no start), but start-no| start-yes|
	# TODO better regex for stop,status
	# TODO LSB also describes: 	restart , force-reload
	# TODO LSB uses:		/lib/lsb/init-functions
	# TODO runlevel 4 is reserved for local use
	#
		# $m should equal to num of grep patterns $LM
		LM=9 
		if [ $m -lt $LM ]; then
			KO=$[ $KO + 1 ]
			echo -n "$f : $m/$LM"
			echo
	 	else	OK=$[ $OK + 1 ]
		fi
	fi
  done
  echo "OK: $OK"
  echo "KO: $KO"
}


function show() {
	f=$1
	# TODO common search function
	# TODO show missing

	echo "=== need:"
	echo "^### BEGIN INIT INFO"
	echo '^#[[:blank:]]\{1\}Provides:[[:blank:]]\+'
	echo '^#[[:blank:]]\{1\}Default-Start:[[:blank:]]\+'
	echo '^#[[:blank:]]\{1\}Default-Stop:[[:blank:]]\+'
	echo "^### END INIT INFO"
	echo "[[:blank:]]\+/etc/rc.status"
	echo "[[:blank:]]\?start\\*\?)"
	echo "[[:blank:]]\?stop\\*\?)"
	echo "[[:blank:]]\?status\\*\?)"
	echo "==="
	echo "=== found:"
	grep -e '^### BEGIN INIT INFO' \
		-e '^#[[:blank:]]\{1\}Provides:[[:blank:]]\+' \
		-e '^#[[:blank:]]\{1\}Default-Start:[[:blank:]]\+' \
		-e '^#[[:blank:]]\{1\}Default-Stop:[[:blank:]]\+' \
		-e '^### END INIT INFO' \
		-e '[[:blank:]]\+/etc/rc.status' \
		-e '[[:blank:]]\?start\\*\?)' \
		-e '[[:blank:]]\?stop\\*\?)' \
		-e '[[:blank:]]\?status\\*\?)' \
	$f 2>>$ERR
	echo "==="
	rpm -qf $f 2>>$ERR
}


function orphan() {
  OK=0; KO=0
  for f in /etc/init.d/* ; do
	RC=0
	if [ -f $f -a -x $f ]; then
		rpm -qf $f 2>>$ERR 1>&2 || RC=1
	fi
	if [ $RC -ne 0 ]; then
		KO=$[ $KO + 1 ]
		echo -n "$f : no RPM"
		echo
	else	OK=$[ $OK + 1 ]
	fi
  done
  echo "OK: $OK"
  echo "KO: $KO"
}


function help() {
	echo "$(basename $EXE) --show <script>" 
	echo "$(basename $EXE) --check | --orphan"
	echo "$(basename $EXE) --version | --help"
	echo "this script is quite beta"
	echo "see also init.d(7) and"
	echo "http://refspecs.linux-foundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html"
}


# main()
case $1 in
	-v|--version)
		echo -n "$(basename $EXE) "
		head -11 $EXE | grep "^# Version: "
		exit
	;;
	-s|--show)
		test $UID -gt 0 && echo "please call as root." && exit
		show $2
		exit
	;;
	-c|--check)
		test $UID -gt 0 && echo "please call as root." && exit
		check
		exit
	;;
	-o|--orphan)
		test $UID -gt 0 && echo "please call as root." && exit
		orphan
		exit	
	;;
	*)
		help
		exit
	;;
esac
#
