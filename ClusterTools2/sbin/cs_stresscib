#!/bin/bash
#
# cs_stresscib
#
# (c) 2015 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU General Public License. No warranty.
#
# Version: 2015-03-04 00:37
#

EXE="$0"
ERR="/dev/null"

CFG="/etc/ClusterTools2/cs_stresscib"
test -s $CFG && source $CFG

test -z "${L_NODE}" &&\
	echo "undefined L_NODE" # && exit 3
test -z "${F_CRON}" &&\
	F_CRON="/etc/cron.d/cs_stresscib"
test -z "${F_LOG}" &&\
	F_LOG="/var/log/cs_stresscib.log"


function do_init() {
	# TODO 2nd arg for stress profile (hana ...)
	LNK=2
	test -L $F_CRON && LNK=0
	test $LNK -eq 0 && echo "existing symlink: $F_CRON: RC:2" && exit 2
	test $LNK -eq 0 ||\
		ln -s /usr/share/ClusterTools2/cs_stresscib.cron $F_CRON &&\
		echo "created symlink: $F_CRON: RC:0"
		grep -v "^#" $F_CRON
	touch $F_LOG
}


function do_exit() {
	LNK=2
	test -L $F_CRON && LNK=0
	test -e $F_CRON || LNK=0
	test $LNK -eq 0 && rm -f $F_CRON &&\
		echo "removed symlink: $F_CRON: RC:0" && exit 0
	test $LNK -eq 0 || echo "not a symlink: $F_CRON: RC:2" && exit 2
}


function do_run() {
#
# stress profile for SAP HANA scale-out, to run every 20-30 seconds
# 	host attributes
#		write	6 x $N_NODE
#		read	$N_NODE x $N_NODE
# 	cluster attributes
#		write	2 
#		read	$N_NODE		(planned ca.2 later)
#

	attr_store="reboot"			# reboot or forever

	time_stamp=$(/bin/date +%F_%H-%M-%S)
	# write host specific attributes, 6 x $N_NODE times
	# TODO how many attributes: 6 x $N_NODE or $N_NODE ?
 	attr_value=${time_stamp}
	for attr_node in ${L_NODE}; do
	    for j in {1..6}; do
 		attr_name="val_stresscib_${attr_node}"
		do_run_writehost
		echo "$time_stamp: do_run_writehost: ${attr_node} $attr_name $attr_value:$?"
	    done
	done >>$F_LOG 2>&1

	time_stamp=$(/bin/date +%F_%H-%M-%S)
	# write cluster specific attributes, 2 times
	attr_value=${time_stamp}
	for i in {1..2}; do
		attr_name="val_stresscib_cluster"
		do_run_writecluster
		echo "$time_stamp: do_run_writecluster: cluster $attr_name $attr_value:$?"
	done >>$F_LOG 2>&1
	
	time_stamp=$(/bin/date +%F_%H-%M-%S)
	# read host specific attributes, $N_NODE x $N_NODE times
	for attr_node in ${L_NODE}; do
	    for j in ${L_NODE}; do
		attr_name="val_stresscib_${attr_node}"
		do_run_readhost
		echo "$time_stamp: do_run_readhost: ${attr_node} $attr_name $attr_value:$?"
	    done
	done >>$F_LOG 2>&1

	time_stamp=$(/bin/date +%F_%H-%M-%S)
	# read cluster specific attributes, $N_NODE times
	for attr_node in ${L_NODE}; do
		attr_name="val_stresscib_cluster"
		do_run_readcluster
		echo "$time_stamp: do_run_readcluster: ${attr_node} $attr_name $attr_value:$?"
	done >>$F_LOG 2>&1
}


function do_run_writehost(){
	/usr/sbin/crm_attribute -N ${attr_node} -v "$attr_value" -n "$attr_name" -l $attr_store -q
}


function do_run_readhost(){
	/usr/sbin/crm_attribute -N ${attr_node} -G -n "$attr_name" -l $attr_store -q	
}


function do_run_writecluster(){
	/usr/sbin/crm_attribute -t crm_config -v "$time_stamp" -n "$attr_name"
}


function do_run_readcluster(){
	/usr/sbin/crm_attribute -t crm_config -G -n "$attr_name"
}


function do_show() {
	# TODO summary only?
	# TODO options?
	echo noop
}


function do_help() {
	echo "usage: $(basename $0) [--help | --version | --init | --exit]"
	echo "usage: $(basename $0) --run [ NUMBER_OF_NODES ]"
	echo
	echo " --init		initialise cib stress cron job."
	echo " --exit		stop cib stress cron job."
	echo " --run		run cib stress."
	echo " --show		show cib cron job stress log."
	echo " --help		show help."
	echo " --version	show version."
	echo
	echo "please adapt L_NODE in /etc/ClusterTools2/cs_stresscib."
}


# main()

case $1 in
	-v|--version)
		echo -n "$(basename $EXE) "
		head -11 $EXE | grep "^# Version: "
		exit
	;;
	-i|--init)
		do_init
	;;
	-e|exit)
		do_exit
	;;
	-r|run)
		shift
		test -z $1 || N_NODE=$1
		do_run
	;;
	-s|show)
		do_show
	;;
	*)
		do_help
		exit
	;;
esac
#
