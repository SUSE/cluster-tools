#!/bin/bash
#
# cs_show_hana_info
#
# (c) 2018-2019 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU General Public License v2. No warranty.
#
# Version: 2019-02-26
#
# TODO /etc/ClusterTools2/cs_show_hana_info
# TODO show logs
# TODO guess SID
#
#set -x

EXE="$0"
#CFG="/etc/ClusterTools2/cs_show_hana_info"
#test -s $CFG && source $CFG

MYHOST=$(hostname)
SAPSVC="/usr/sap/sapservices"

test -z "${TEMP}" &&\
	TEMP="/dev/shm/cltl.$RANDOM"

function show_help() {
	echo "usage	$(basename $0) [ --help | --version ]"
	echo "	$(basename $0) [ --info | --logs ] <sid> <inst_nr>"
	echo
	echo " --help		show help."
	echo " --version	show version."
	echo " --info <sid> <inst_nr>	show info for given instance."
	echo " --logs <sid> <inst_nr>	show logs for given instance."
	echo
	exit
}

function show_info() {

	echo "# $(basename $EXE}): show_info"

	# TODO su - ${SID}adm once for the whole function

	echo "hostname: ${MYHOST}" >${TEMP} || exit 2
	echo "sid: $ARG_SID" >>${TEMP}
	echo "inst_nr: $INR" >>${TEMP}
	echo
	RC_ALL=0

	echo "# ===" >>${TEMP}
	echo "# sapcontrol -nr $INR -function GetProcessList:" >>${TEMP}
	su - ${SID}adm -c "sapcontrol -nr $INR -function GetProcessList" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# sapcontrol -nr $INR -function GetProcessList: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}
	echo "# hdbnsutil -sr_state:" >>${TEMP}
	su - ${SID}adm -c "hdbnsutil -sr_state" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# hdbnsutil -sr_state: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}
	echo "# landscapeHostConfiguration.py:" >>${TEMP}
	su - ${SID}adm -c "HDBSettings.sh landscapeHostConfiguration.py" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# landscapeHostConfiguration.py: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}
	echo "# systemReplicationStatus.py:" >>${TEMP}
	su - ${SID}adm -c "HDBSettings.sh systemReplicationStatus.py" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# systemReplicationStatus.py: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}
	echo "# HDB info:" >>${TEMP}
	su - ${SID}adm -c "HDB info" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# HDB info: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}	
	echo "# HDBSettings.sh systemOverview.py:" >>${TEMP}
	su - ${SID}adm -c "HDBSettings.sh systemOverview.py" >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# HDBSettings.sh systemOverview.py: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}	
	echo "# cat $SAPSVC" >>${TEMP}
	cat $SAPSVC >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# cat ${SAPSVC}: RC: "$RC >>${TEMP}
	echo

	echo "# ===" >>${TEMP}	
	echo "# cat $GBLINI" >>${TEMP}
	cat $GBLINI >>${TEMP}
	RC=$? ; RC_ALL=$[ $RC_ALL + $RC ]
	echo "# cat ${GBLINI}: RC: "$RC >>${TEMP}
	echo

	cat ${TEMP} && rm ${TEMP}
}

function show_logs() {

	RC_ALL=0

	# TODO awk ... /hana/shared/${SID}/HDB${INR}/${MYHOST}/trace/*.trc
	# 5th? column = "e"
	# ? column = "DISK FULL"
	echo "not implemented yet"
}


# main()
case $1 in
	-v|--version)
		echo -n "$(basename $EXE) "
		head -11 $EXE | grep "^# Version: "
		exit
	;;
	-i|--info)
		test $# -eq 3 || show_help
		ARG_SID=$2
		SID=$(echo $2 | tr "[:upper:]" "[:lower:]")
		INR=$3
		GBLINI="/usr/sap/${ARG_SID}/SYS/global/hdb/custom/config/global.ini"
		show_info
		exit $RC_ALL
	;;
	-l|--logs)
		test $# -eq 3 || show_help
		SID=$(echo $2 | tr "[:upper:]" "[:lower:]")
		INR=$3
		show_logs
		exit $RC_ALL
	;;
	*)
		show_help
		exit
	;;
esac
#
