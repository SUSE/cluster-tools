#!/bin/bash
#
# cs_stresscib
#
# (c) 2015 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU General Public License. No warranty.
#
# Version: 2015-03-03
#

EXE="$0"
ERR="/dev/null"

CFG="/etc/ClusterTools2/cs_stresscib"
test -s $CFG && source $CFG

test -z "${N_NODES}" && N_NODES="9"
test -z "${F_CRON}" && F_CRON="/etc/crontab.d/cs_stresscib"
test -z "${F_LOG}" && F_LOG="/var/log/cs_stresscib.log"


function do_init() {
	# TODO 2nd arg for stress profile (hana ...)
	LNK=1
	test -L $F_CRON && LNK=0
	test $LNK -eq 0 && echo "existing symlink: $F_CRON" && exit 2 
	test $LNK -eq 0 ||\
		ln -s /usr/share/ClusterTools2/cs_stresscib.cron $F_CRON &&\
		grep -v "^#" /etc/crontab.d/cs_stresscib
}


function do_exit() {
	LNK=1
	test -L $F_CRON && LNK=0
	test $LNK -eq 0 && rm $F_CRON && echo "removed symlink: $F_CRON" && exit 0
	test $LNK -eq 0 || echo "not a symlink: $F_CRON" && exit 2
}


function do_run() {
	log_file=$F_LOG
	attr_store="reboot"	# reboot or forever
	time_stamp=$(/bin/date +%F_%H:%M:%S)
	
	for i in {1..$N_NODES}; do
 		attr_node="node$i"
 		attr_value=$(/bin/date +%F_%H:%M:%S)
 		attr_name="val_stresscib_${attr_node}"

		# write HOST-specific
		# /usr/sbin/crm_attribute -N ${attr_node} -v "$attr_value" -n "$attr_name" -l $attr_store -q
		# write CLUSTER-specific
		/usr/sbin/crm_attribute -t crm_config -v "$time_stamp" -n "$attr_name"
		done >>$log_file 2>&1
	done
}


function do_show() {
	echo noop
}


function do_help() {
	echo "usage: $(basename $0) [--help | --version | --init | --exit]"
	echo "usage: $(basename $0) --run <NUMBER_OF_NODES>"
	echo
	echo " --init		initialise cib stress cron job."
	echo " --exit		stop cib stress cron job."
	echo " --run		run cib stress."
	#echo " --show		show cib cron job stress log."
	echo " --help		show help."
	echo " --version	show version."
}


# main()

case $1 in
	-v|--version)
		echo -n "$(basename $EXE) "
		head -11 $EXE | grep "^# Version: "
		exit
	;;
	-i|--init)
		do_init
		exit
	;;
	-e|exit)
		do_exit
		exit
	;;
	-r|run)
		do_run
		exit
	;;
	-s|show)
		do_show
		exit
	;;
	*)
		do_help
		exit
	;;
esac
#
