#!/bin/bash
#
# grep-error-patterns
#
# (c) 2011 SUSE Linux GmbH, Germany. Author: L.Pinne.
# GNU Public License. No warranty.
#
# Version: 0.1 2011-03-06
#
# For SLES11.

. /etc/ClusterTools2/grep-error-patterns

EXE="$0"

test -z "${ERROR_PATTERN}" && ERROR_PATTERN="
"taint.flag"
"no.device.*found"
"lpfc.*err"
"qla.*err"
"target.failure"
"reservation.conflict"
"SCSI.*reset"
"LUN.larger"
"I/O.error"
"disabling.*barrier"
"multi.*path.*down"
"duplicate.VG"
"duplicate.PV"
"not.found"
"ocfs2.*ERR"
"ocfs2.*not.unmounted.cleanly"
"fsck.*recommended"
"EXT.-fs.error"
"iSCSI.connection.*error"
"bond.*link.*down"
"bond.*duplicate.address"
"link.*not.ready"
"link.failure"
"ntpd.*failed"
"ntpd.*time.reset"
"crm_resource.*Error"
"logrotate.*error"
"Failed.to.read"
"TOTEM.*FAILED.*RECEIVE"
"TOTEM.*processor.failed"
"

#
test -z "${CLUSTER_LOG}" && CLUSTER_LOG=$(grep "logfile:.*/" /etc/corosync/corosync.conf |\
		 tr -d "    " | cut -d":" -f2)
# TODO: awk that and use it below


function help() {
                echo "usage: $(basename $0) [OPTION]"
                echo
                echo " --help           show help."
                echo " --version        show version."
}


# main()

case $1 in
	-v|--version)
        	head -11 $EXE | grep "^# Version: "
		exit
	;;
	-h|--help)
		help
		exit
	;;
	*)
	for f in $ERROR_PATTERN; do
        	echo -n "$f = "
        	# TODO: more efficient loop
		#        ( zgrep -i $f /var/log/messages*bz2 ; grep -i $f /var/log/messages ; grep -i $f /var/log/boot.*; dmesg | grep -i $f)|\
        	( grep -i $f /var/log/messages ; grep -i $f /var/log/boot.*; dmesg | grep -i $f )|\
        	wc -l
	done
	;;
esac
#

