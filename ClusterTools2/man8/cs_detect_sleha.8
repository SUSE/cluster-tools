.TH cs_detect_sleha 8 "10 Aug 2016" "" "ClusterTools2"
.\"
.SH NAME
cs_detect_sleha \- look for indicators of SLE-HA add-on
.\"
.SH SYNOPSIS
.B cs_detect_sleha
.br
.B cs_detect_sleha \fI[OPTION]\fR
.\"
.SH DESCRIPTION
\fBcs_detect_sleha\fP looks for RPMs, files, and repositories which might indicate an installation of the SLE-HA add-on.
Un-installing all RPMs of SLE-HA is another function. Nevertheless, RPMs which were installed by dependency may remain on the system. Finally the script can remove almost all files and detach zypper repos which are related to SLE-HA.

When detecting or removing SLE-HA, it is good to know that some RPMs are delivered with other products as well. F.e. libgnutls-extra26 with SLES, lighttpd and rubygems with SLE-SDK. Further, the number of RPMs seen depends on available repositories. Thus, if no repository is connected, a functional SLE-HA might show up with less than 30 RPMs. The same system might show 120 RPMs, if pool and update channels are available.

To handle the various overlapping RPM sources, different sets
SLEHA_BASE_RPM, SLEHA_MISC_RPM, SLEHA_KERN_RPM, SLEHA_EXTR_RPM, and SLEHA_4SAP_RPM
are used. Where installation of any RPM from SLEHA_BASE_RPM or SLEHA_KERN_RPM is seen
as indicator for installation of the SLE-HA add-on.
Note: This script looks for RPM names only, it does not care for providers other than
SLE-HA. Thus, if any RPM listed was self-made or fetched from 3rd source, it will be
counted or deleted as well. See section EXIT STATUS for counting.

Additional files, as listed in
SLEHA_BASE_FIL, SLEHA_KERN_FIL, and SLEHA_MISC_FIL,
are searched for. The occurance of any file from SLEHA_BASE_FIL or SLEHA_KERN_FIL is
seen as indicator for usage of the SLE-HA add-on. See section EXIT STATUS for counting.

Finally, the script tries to figure out if an update repository is connected and
activated by zypper.
.\"
.SH OPTIONS
.HP
\fB --help\fR
	show help.
.HP
\fB --version\fR
	show version.
.HP
\fB --detect\fR
	show number of installed substantial RPMs, files. Return code will also be that number.
.HP
\fB --installed\fR
	show installed substantial RPMs.
.HP
\fB --available\fR
	show available base RPMs.
.HP
\fB --standalone\fR
	show installed standalone RPMs, files.
.HP
\fB --files\fR
	show common installed files.
.HP
\fB --pedantic\fR
	show even minimal traces of SLE-HA.
.HP
\fB --removeall\fR
	remove RPMs, files, repos of SLE-HA (DANGER); opposite to renewal.
.HP
\fB --uninstall\fR
	uninstall substantial RPMs of SLE-HA.
.HP
\fB --writecfg\fR
	show internal variables, f.e. lists of RPMs and files.
.\"
.SH EXAMPLES
.br
.TP
* Search for files and RPMs that might indicate components of SLE-HA are installed. Be pedantic with the search, but just print number of findings. A return code of "0" means "search went well, no traces of SLE-HA found". Return codes below "5" indicate some spoor, but usually not a functional SLE-HA installation. 
# \fBcs_detect_sleha 2>/dev/null; echo $?\fR
.TP
* Search for files and RPMs that might indicate components of SLE-HA are installed. Be pedantic with the search and print all findings. This might help, if the above search returned something obscure.
# \fBcs_detect_sleha --pedantic\fR
.TP
* Search for components that might run without SLE-HA, but are supported only together with SLE-HA - f.e. DRBD, OCFS2, ReaR. This might help, if a few hints were detected.
# \fBcs_detect_sleha -s\fR
.TP
* Search for config and status files. This might help finding out whether SLE-HA was in use. 
# \fBcs_detect_sleha -f\fR
.TP
* Uninstall substantial RPMs of SLE-HA. Some RPMs that are fetched as dependecy during installation will remain on the system. Also all files that are not handled by the RPM post-scripts will remain.
# \fBcs_detect_sleha --uninstall\fR
.TP
* Show what RPMs and files are known to this script. The output might be used for preparing a custom config file /etc/ClusterTools2/cs_detect_sleha.
# \fBcs_detect_sleha -w\fR
.\"
.SH EXIT STATUS
.B 0
Successful program execution.
.br
.B >0
Usage, syntax or execution errors.
.br
When called without any option, or with option "--detect", the return
code equals the number of indications found.
.br
0     : no SLE-HA
.br
<5    : some spoor, but no functional SLE-HA
.br
<10   : maybe standalone function installed (f.e. DRBD, OCFS2, ReaR)
.br
10-90 : maybe functional SLE-HA installed
.br
90>   : certainly functional SLE-HA installed, maybe used
.br
100>  : certainly functional SLE-HA installed and used
.\"
.SH FILES
.TP
/usr/sbin/cs_detect_sleha
        the program itself.
.TP
/etc/ClusterTools2/cs_detect_sleha, /usr/ClusterTools2/cs_delcib
        the configuration.
.\"
.SH BUGS
The "--removeall" function might damage the system - do not use it. 
Detecting and detaching repositories from zypper is currently not implemented.
The script returns wrong results, if the RPM database  is locked.
The script looks for RPM names only, it does not care for providers other than SLE-HA.
Feedback is welcome, please use the project page at
.br
https://build.opensuse.org/package/show?package=ClusterTools2&project=home%3Afmherschel
.\"
.SH SEE ALSO
\fBzypper\fP(8), \fBrpm\fP(8), \fBcs_delcib\fP(8),
.br
https://www.suse.com/releasenotes/x86_64/SLE-HA/11-SP4/
.\"
.SH COPYRIGHT
(c) 2016 L.Pinne, Germany.
.br
cs_detect_sleha comes with ABSOLUTELY NO WARRANTY.
.br
For details see the GNU General Public License at
http://www.gnu.org/licenses/gpl.html
.\"
