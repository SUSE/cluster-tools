#!/bin/bash
#
# cs_show_hana_autofailover_patterns
#
# (c) 2019 SUSE Linux GmbH, Germany. Author: L.Pinne
# GNU General Public License v2. No warranty.
# http://www.gnu.org/licenses/gpl.html
#
# Version: 2019-02-20 13:20 SLES12
#
# TODO /etc/ClusterTools2/cs_show_hana_autofailover_patterns
# TODO patterns instead of functions like cs_error_patterns
# TODO  --help
# TODO  -g and -f like cs_show_supportconfig
#

DATE=${1:-"2019-01-27"}
LOGS="messages*"
FCHBA="ibmvfc"


# FC switch replacement
show_hba_err() {
  grep "$DATE".*"$FCHBA".*Login.failed $LOGS |\
	cut_line
}

# SBD path error
show_sbd_err() {
  grep "$DATE".*sbd.*terminated $LOGS |\
	cut_line
}

# SBD self-reboot
# TODO due to path error or poison pill? 
show_sbd_boot() {
  grep "$DATE".*sbd.*Rebooting.system $LOGS |\
	cut_line
}

# SBD read reset
show_sbd_recv() {
  grep "$DATE".*sbd.*Received.command.reset $LOGS |\
	cut_line
}

# SBD write reset
show_sbd_send() {
  grep "$DATE".*USER=root.*sbd.*message.*reset $LOGS |\
	cut_line
}

# XFS shutdown
show_xfs_err() {
  grep "$DATE".*XFS.*Shutting.down $LOGS |\
	cut_line
}

# XFS mount
show_xfs_mnt() {
  grep "$DATE".*USER=root.*mount.*xfs.*hana $LOGS |\
	cut_line
}

# XFS umount
show_xfs_umnt() {
  grep "$DATE".*USER=root.*umount.*hana $LOGS |\
	cut_line
}

# SCSI3 reservation reserve
show_scsi_lock() {
  grep "$DATE".*USER=root.*sg_persist.*out.*reserve $LOGS |\
	cut_line
}

# SCSI3 reservation preeempt
show_scsi_prem() {
  grep "$DATE".*USER=root.*sg_persist.*out.*preempt $LOGS |\
	cut_line
}

# SCSI3 reservation clear
show_scsi_free() {
  grep "$DATE".*USER=root.*sg_persist.*out.*clear $LOGS |\
	cut_line
}

# SCSI3 reservation conflict
show_scsi_clash() {
  grep "$DATE".*kernel.*reservation.conflict $LOGS |\
	cut_line
}

# MPIO path removed
show_mpio_del() {
  grep "$DATE".*multipath.*path.removed $LOGS |\
	cut_line
}

# MPIO path added
show_mpio_add() {
  grep "$DATE".*multipath.*path.added $LOGS |\
	cut_line
}

# system boot
show_sys_boot() {
  grep "$DATE".*kernel.*bootconsole.*enabled $LOGS |\
	cut_line
}

# TODO system shutdown
show_sys_shut() {
  grep "$DATE".*systemd.*Reached.target.Shutdown $LOGS |\
	cut_line
}

# select colums
cut_line() {
	awk -F" " '{print $1}' |\
	awk -F":" '{print $2":"$3":"$4}' |\
	awk -F"." '{print $1}' | sort -u
}

# show additional info
show_info() {
	while read; do echo ${REPLY}" - "${1} ; done
}


# main
(
 #show_sbd_err | show_info sbd_err
 show_sbd_recv | show_info "sbd_recv ---" 
 show_sbd_send | show_info "sbd_send +++"
 #show_sbd_boot | show_info "sbd_boot <<<<<<"
 show_xfs_mnt | show_info xfs_mnt 
 show_xfs_umnt | show_info xfs_umnt 
 show_xfs_err | show_info "xfs_err !!!" 
 show_hba_err | show_info hba_err
 show_mpio_del | show_info mpio_del
 show_mpio_add | show_info mpio_add
 show_sys_boot | show_info "sys_boot >>>>>>"
 #show_sys_shut | show_info sys_shut 
 show_scsi_lock | show_info "scsi_lock ..." 
 show_scsi_prem | show_info "scsi_pre" 
 show_scsi_free | show_info scsi_free 
 show_scsi_clash | show_info scsi_clash
) | sort
#
